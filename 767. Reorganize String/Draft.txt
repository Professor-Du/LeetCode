
  // qsort (hash, 26, sizeof (HASH_TABLE), cmp);

  // h1 = hash; h2 = hash + 1; idx = 2; i = 0;
  // while (true) {
  //   if (h1->count == 0) {
  //     if ((idx >= 26) || hash[idx].count == 0) {
  //       if (h2->count >= 2) {
  //         return "";
  //       } else if (h2->count > 0) {
  //         s[i] = h2->character;
  //       }
  //       return s;
  //     }
  //     h1 = hash + idx++;
  //   }

  //   if (h2->count == 0) {
  //     if ((idx >= 26) || hash[idx].count == 0) {
  //       if (h1->count >= 2) {
  //         return "";
  //       } else if (h1->count > 0) {
  //         s[i] = h1->character;
  //       }
  //       return s;
  //     }
  //     h2 = hash + idx++;
  //   }

  //   s[i++] = h1->character;
  //   s[i++] = h2->character;
  //   h1->count--;
  //   h2->count--;
  // }


void displayHash (HASH_TABLE *hash) {
  for (int i = 0; i < 26; i++) {
    if (hash[i].count == 0) {
      continue;
    }
    printf (" [%c]=%d ", hash[i].character, hash[i].count);
  }
}